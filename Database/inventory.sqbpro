<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="D:/Inventory System/inventory.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="3809"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainPayments"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Delivery_Expenses" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="134"/><column index="2" value="108"/><column index="3" value="91"/><column index="4" value="156"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Discounts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="138"/><column index="2" value="171"/><column index="3" value="108"/><column index="4" value="192"/><column index="5" value="128"/><column index="6" value="160"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Inventory_Updates" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="123"/><column index="2" value="146"/><column index="3" value="146"/><column index="4" value="157"/><column index="5" value="137"/><column index="6" value="145"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Payments" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="139"/><column index="2" value="171"/><column index="3" value="108"/><column index="4" value="147"/><column index="5" value="148"/><column index="6" value="161"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="89"/><column index="2" value="216"/><column index="3" value="100"/><column index="4" value="77"/><column index="5" value="99"/><column index="6" value="68"/><column index="7" value="195"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE IF NOT EXISTS Products (
    SKU TEXT PRIMARY KEY,
    Name TEXT NOT NULL,
    Brand TEXT NOT NULL,
    Size TEXT,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    Last_Updated DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Shopkeepers (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Contact_Info TEXT
);

CREATE TABLE IF NOT EXISTS Khata (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Shopkeeper_ID INTEGER,
    Brand TEXT NOT NULL,
    Total_Due REAL DEFAULT 0,
    Last_Payment_Date DATETIME,
    FOREIGN KEY (Shopkeeper_ID) REFERENCES Shopkeepers(ID)
);

CREATE TABLE IF NOT EXISTS Salesmen (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Contact_Info TEXT,
    Total_Sales REAL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS Orders (
    Order_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Shopkeeper_ID INTEGER,
    Salesman_ID INTEGER,
    Order_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    Total_Amount REAL NOT NULL,
    FOREIGN KEY (Shopkeeper_ID) REFERENCES Shopkeepers(ID),
    FOREIGN KEY (Salesman_ID) REFERENCES Salesmen(ID)
);

CREATE TABLE IF NOT EXISTS Order_Items (
    Order_Item_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Order_ID INTEGER,
    Product_SKU TEXT,
    Quantity INTEGER NOT NULL,
    Price REAL NOT NULL,
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID),
    FOREIGN KEY (Product_SKU) REFERENCES Products(SKU)
);

CREATE TABLE IF NOT EXISTS Payments (
    Payment_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Shopkeeper_ID INTEGER,
    Order_ID INTEGER,
    Amount_Paid REAL NOT NULL,
    Payment_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Shopkeeper_ID) REFERENCES Shopkeepers(ID),
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID)
);

CREATE TABLE IF NOT EXISTS Discounts (
    Discount_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Shopkeeper_ID INTEGER,
    Order_ID INTEGER,
    Discount_Amount REAL NOT NULL,
    Applied_By TEXT NOT NULL,
    Discount_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Shopkeeper_ID) REFERENCES Shopkeepers(ID),
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID)
);

CREATE TABLE IF NOT EXISTS Delivery_Expenses (
    Expense_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Order_ID INTEGER,
    Amount REAL NOT NULL,
    Expense_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Order_ID) REFERENCES Orders(Order_ID)
);

CREATE TABLE IF NOT EXISTS Inventory_Updates (
    Update_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Product_SKU TEXT,
    Old_Quantity INTEGER NOT NULL,
    New_Quantity INTEGER NOT NULL,
    Updated_By TEXT NOT NULL,
    Update_Date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Product_SKU) REFERENCES Products(SKU)
);
</sql><sql name="SQL 2">-- Insert Dummy Products
INSERT INTO Products (SKU, Name, Brand, Size, Quantity, Price) VALUES
('PAMP001', 'Pampers Premium Care', 'Bonapapa', 'Small', 200, 1500),
('PAMP002', 'Pampers Baby-Dry', 'Bonapapa', 'Medium', 150, 1400),
('PAMP003', 'Huggies Ultra Soft', 'Candyland', 'Large', 100, 1800),
('PAMP004', 'Molfix Comfort', 'Candyland', 'XL', 50, 2000);

-- Insert Dummy Shopkeepers
INSERT INTO Shopkeepers (Name, Contact_Info) VALUES
('Ali Traders', '03001112222'),
('Usman &amp; Sons', '03005556666'),
('Hassan Mart', '03114445555');

-- Insert Dummy Khata (Ledger)
INSERT INTO Khata (Shopkeeper_ID, Brand, Total_Due, Last_Payment_Date) VALUES
(1, 'Bonapapa', 15000, '2025-02-15'),
(1, 'Candyland', 5000, '2025-02-10'),
(2, 'Bonapapa', 9000, '2025-02-12'),
(3, 'Candyland', 4000, '2025-02-18');

-- Insert Dummy Salesmen
INSERT INTO Salesmen (Name, Contact_Info, Total_Sales, Total_Collections) VALUES
('Ahmed Khan', '03124567890', 30000, 8000),
('Bilal Saeed', '03221234567', 20000, 4000);

-- Insert Dummy Orders
INSERT INTO Orders (Shopkeeper_ID, Salesman_ID, Order_Date, Total_Amount) VALUES
(1, 1, '2025-02-15', 20000),
(1, 2, '2025-02-10', 5000),
(2, 1, '2025-02-12', 12000),
(3, 2, '2025-02-18', 8000);

-- Insert Dummy Order Items
INSERT INTO Order_Items (Order_ID, Product_SKU, Quantity, Price) VALUES
(1, 'PAMP001', 10, 15000),
(1, 'PAMP002', 5, 7000),
(2, 'PAMP003', 3, 5400),
(3, 'PAMP001', 8, 12000),
(4, 'PAMP004', 4, 8000);

-- Insert Dummy Payments (Collections by Salesmen)
INSERT INTO Payments (Shopkeeper_ID, Order_ID, Salesman_ID, Amount_Paid, Payment_Date) VALUES
(1, 1, 1, 5000, '2025-02-16'),
(2, 3, 1, 3000, '2025-02-13'),
(3, 4, 2, 4000, '2025-02-19');

-- Insert Dummy Discounts
INSERT INTO Discounts (Shopkeeper_ID, Order_ID, Discount_Amount, Applied_By, Discount_Date) VALUES
(1, 1, 1000, 'Admin', '2025-02-15'),
(2, 3, 1500, 'Admin', '2025-02-12');

-- Insert Dummy Delivery Expenses
INSERT INTO Delivery_Expenses (Order_ID, Amount, Expense_Date) VALUES
(1, 500, '2025-02-15'),
(3, 700, '2025-02-12');

-- Insert Dummy Inventory Updates
INSERT INTO Inventory_Updates (Product_SKU, Old_Quantity, New_Quantity, Updated_By, Update_Date) VALUES
('PAMP001', 200, 190, 'Admin', '2025-02-15'),
('PAMP003', 100, 97, 'Admin', '2025-02-10'),
('PAMP002', 150, 145, 'Admin', '2025-02-12');
</sql><current_tab id="1"/></tab_sql></sqlb_project>
