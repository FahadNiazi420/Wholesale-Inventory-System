<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="D:/Wholesale-Inventory-System/Database/inventory.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5322"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainPayments"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Delivery_Expenses" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="113"/><column index="2" value="90"/><column index="3" value="78"/><column index="4" value="132"/><column index="5" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Discounts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="118"/><column index="2" value="144"/><column index="3" value="90"/><column index="4" value="165"/><column index="5" value="108"/><column index="6" value="162"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Khata" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="144"/><column index="3" value="83"/><column index="4" value="98"/><column index="5" value="183"/><column index="6" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="144"/><column index="3" value="124"/><column index="4" value="162"/><column index="5" value="153"/><column index="6" value="93"/><column index="7" value="172"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Payments" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="117"/><column index="2" value="144"/><column index="3" value="90"/><column index="4" value="124"/><column index="5" value="126"/><column index="6" value="136"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="88"/><column index="2" value="180"/><column index="3" value="83"/><column index="4" value="52"/><column index="5" value="84"/><column index="6" value="93"/><column index="7" value="162"/><column index="8" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Shopkeepers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="114"/><column index="3" value="124"/><column index="4" value="93"/><column index="5" value="83"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TRIGGER update_khata_on_payment_insert
AFTER INSERT ON Payments
FOR EACH ROW
BEGIN
    -- Update the total due by subtracting the payment amount
    UPDATE Khata
    SET Total_Due = Total_Due - NEW.Amount_Paid,
        Last_Payment_Date = NEW.Payment_Date
    WHERE Shopkeeper_ID = NEW.Shopkeeper_ID
    AND Brand = (SELECT Brand FROM Shopkeepers WHERE ID = NEW.Shopkeeper_ID);
END;

CREATE TRIGGER update_khata_on_payment_update
AFTER UPDATE ON Payments
FOR EACH ROW
BEGIN
    -- Add back old payment amount before subtracting new payment amount
    UPDATE Khata
    SET Total_Due = Total_Due + OLD.Amount_Paid - NEW.Amount_Paid,
        Last_Payment_Date = NEW.Payment_Date
    WHERE Shopkeeper_ID = NEW.Shopkeeper_ID
    AND Brand = (SELECT Brand FROM Shopkeepers WHERE ID = NEW.Shopkeeper_ID);
END;

CREATE TRIGGER update_khata_on_payment_delete
AFTER UPDATE OF IsDeleted ON Payments
FOR EACH ROW
WHEN NEW.IsDeleted = 1 AND OLD.IsDeleted = 0  -- Only trigger when marking as deleted
BEGIN
    UPDATE Khata
    SET Total_Due = Total_Due + OLD.Amount_Paid
    WHERE Shopkeeper_ID = OLD.Shopkeeper_ID
    AND Brand = (SELECT Brand FROM Shopkeepers WHERE ID = OLD.Shopkeeper_ID);
END;

CREATE TRIGGER update_khata_on_order_insert
AFTER INSERT ON Orders
FOR EACH ROW
BEGIN
    -- Update or insert into Khata
    INSERT INTO Khata (Shopkeeper_ID, Brand, Total_Due, Last_Payment_Date, IsDeleted)
    VALUES (
        NEW.Shopkeeper_ID,
        (SELECT Brand FROM Shopkeepers WHERE ID = NEW.Shopkeeper_ID),
        NEW.Total_Amount - COALESCE((SELECT SUM(Discount_Amount) FROM Discounts 
                                     WHERE Order_ID = NEW.Order_ID AND IsDeleted = 0), 0),
        NULL,
        0
    )
    ON CONFLICT(Shopkeeper_ID, Brand) 
    DO UPDATE SET 
        Total_Due = Total_Due + NEW.Total_Amount - COALESCE((SELECT SUM(Discount_Amount) FROM Discounts 
                                                             WHERE Order_ID = NEW.Order_ID AND IsDeleted = 0), 0);
END;


CREATE TRIGGER update_khata_on_order_update
AFTER UPDATE ON Orders
FOR EACH ROW
BEGIN
    -- Adjust Total_Due in Khata when order total changes
    UPDATE Khata
    SET Total_Due = Total_Due 
                    - (OLD.Total_Amount - COALESCE((SELECT SUM(Discount_Amount) FROM Discounts 
                                                    WHERE Order_ID = OLD.Order_ID AND IsDeleted = 0), 0)) 
                    + (NEW.Total_Amount - COALESCE((SELECT SUM(Discount_Amount) FROM Discounts 
                                                    WHERE Order_ID = NEW.Order_ID AND IsDeleted = 0), 0))
    WHERE Shopkeeper_ID = NEW.Shopkeeper_ID
    AND Brand = (SELECT Brand FROM Shopkeepers WHERE ID = NEW.Shopkeeper_ID);
END;

CREATE TRIGGER update_khata_on_order_delete
AFTER UPDATE OF IsDeleted ON Orders
FOR EACH ROW
WHEN NEW.IsDeleted = 1 AND OLD.IsDeleted = 0  -- Trigger only when order is marked as deleted
BEGIN
    -- Revert Total_Due in Khata when an order is deleted
    UPDATE Khata
    SET Total_Due = Total_Due - (OLD.Total_Amount - COALESCE((SELECT SUM(Discount_Amount) FROM Discounts 
                                                              WHERE Order_ID = OLD.Order_ID AND IsDeleted = 0), 0))
    WHERE Shopkeeper_ID = OLD.Shopkeeper_ID
    AND Brand = (SELECT Brand FROM Shopkeepers WHERE ID = OLD.Shopkeeper_ID);
END;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
